//коментарии где угодно. даже првой строкой.
//первым идёт package (не обязателен)
package experiments.oca.chapter1;

//далее импорты (тоже не обязательны)
//ниже статические импорты.
//import java.lang не требуется. это происходит неявно.

//public class Name обязательно в файле.
public class Main {
//    точка входа в программу метод main обязательная сигнатура:
    public static void main(String[] args) {
//        public static void main(String... args)
//        public static void main(String args[])
//        public static void main(String names[])
    }

    static {
//        статические блок инициализации при создании объекта он срабатывает первый, потом блок ни же и далее конструктор
    }

    {
//        это блок инициализации
    }

//    это конструктор. (по умочанию его не обязательно определять)
//    конструктор может быть перегруженным. может принимать параметры.
//    ключевое слово new создаёт новый объект запуская его конструктор.
    public Main() {

    }

    private static void method() {
//        8 примитивных типов Java. это основные блоки языка.
//        могут быть использованны как поля класса, так же как и ссылочные типы.
        byte b = 0;
        short s = 0;
        int i = 0;
        long l = 0L;
        float f = 0.0f;
        double d = 0.0d;
        char c = '\u0000';
        boolean bool = false;

//        тип переменной объявленный классом является ссылочным типом.
//        у каждой перменной есть инициализация по-умолчанию.
//        если перменная является полем класс, то инициализация происходит автоматически.
//        локальная переменная должна быть объявлена и проинициализированна перед использованием.
//        область видимости переменных может быть ограничена.
//        если это поле класса, то модификаторами доступа. публичная переменная видна на протяжении всей программы
//        пока жив объект содержащий эту переменную. приватная так же, но видна только самому объекту.
//        переменная внутри метода(локальная) видна внутри этого метода.
//        переменная внутри блока кода ({ }) видна только внутри этого блока кода. или блокам внутри этого блока.
//
        String str = null;
    }

}
